package theme

import (
	"fmt"
	"io/ioutil"
	"os"
	"regexp"
	"strings"
	"time"

	"github.com/dennis1248/Automated-Windows-10-configuration/src/commands"
	"github.com/dennis1248/Automated-Windows-10-configuration/src/fs"
	"github.com/dennis1248/Automated-Windows-10-configuration/src/types"
)

// this package sets the theme stuff

func ThemeColor(Package types.Config) string {
	r, _ := regexp.Compile("^#?[A-Fa-f0-9]{6}$")
	check := r.MatchString(Package.ThemeColor)
	if check {
		return "0XC4" + strings.Replace(strings.ToUpper(Package.ThemeColor), "#", "", -1)
	}
	return "0XC4E81123"
}

func MkTheme(Package types.Config) string {
	// return a string that can be saved as a valid .theme file

	// NOTE: don't tab the return value so it looks nicer because that will break the output output content
	// NOTE: everything inside a raw string literal (``) is literary copied so tabs to
	return `; Generated by Automated-Windows-10-configuration.

[Theme]
DisplayName=winconftheme

[Control Panel\Desktop]
Wallpaper=` + fs.GetWallpaper(Package) + `
MultimonBackgrounds=0
PicturePosition=4
TileWallpaper=0
WallpaperStyle=2
Pattern=
ScreenSaveActive=0

[VisualStyles]
Path=%SystemRoot%\resources\themes\Aero\Aero.msstyles
ColorStyle=NormalColor
Size=NormalSize
AutoColorization=0
ColorizationColor=` + ThemeColor(Package) + `
VisualStyleVersion=10

[MasterThemeSelector]
MTSM=DABJDKT
`
}

func SetTheme() error {
	// set theme that is generated from the config file

	ThemeFile := "installTheme.theme"

	// get package information
	Package, err := fs.FindAndOpenPackageJson()
	if err != nil {
		return err
	}

	// remove old theme files if exsist
	os.Remove(ThemeFile)

	// create installTheme.theme
	theme := []byte(MkTheme(Package))
	err = ioutil.WriteFile(ThemeFile, theme, 0777)
	if err != nil {
		return err
	}

	// install theme
	_, err = commands.Run("cmd", "/c", ThemeFile)
	if err != nil {
		return err
	}

	// try close the settings because it pops up when installing theme
	fmt.Println("Wait 2 seconds before trying to close settings")
	time.Sleep(2 * time.Second)
	commands.Run(
		"cmd", "/c",
		"taskkill", "/im", "SystemSettings.exe", "/t", "/f")

	// cleanup
	os.Remove(ThemeFile)

	return nil
}
